name: install  cart component
  hosts: shipping
  become: yes
  tasks: 
  - name: install maven
    ansible.builtin.yum:
      name: maven
      state: installed

  - name: check roboshop user exist or not
    ansible.builtin.command: id roboshop
    register: out 
    ignore_errors: true
  - when: out.rc != 0
    name: create user roboshop
    ansible.builtin.user:
     name: roboshop

  - name: check /app directory exist or not
    ansible.builtin.stat:
      path: /app
    register: directory

  - name: print the directory stats
    ansible.builtin.debug:
      msg: "output: {{directory}}"

  - when: directory.stat.exists == False
    name: create /app directory
    ansible.builtin.file:
      path: /app
      state: directory
  - name: download shipping artifact
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /home/centos/.ansible/tmp

  - name: extract shipping artifact
    ansible.builtin.unarchive:
      src: /home/centos/.ansible/tmp/shipping.zip
      dest: /app  
      remote_src: yes

  - name: rename jar file
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: copy shiiping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service
  - name: deamon reload
    ansible.builtin.systemd:
      daemon_reload: true
  - name: install mysql client
    ansible.builtin.yum:
      name: mysql
      state: installed
  - name: load mysql schema 
    ansible.builtin.shell: mysql -h <MYSQL-SERVER-IPADDRESS> -uroot -pRoboShop@1 < /app/schema/shipping.sql 
  - name: restated the server
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: true
  